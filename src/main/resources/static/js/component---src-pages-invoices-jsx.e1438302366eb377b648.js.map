{"version":3,"sources":["webpack://books/./src/components/common/SearchByButton.jsx","webpack://books/./src/components/common/modal/ConfirmationModal.jsx","webpack://books/./src/components/invoices/DeleteInvoiceModal.jsx","webpack://books/./src/components/invoices/SearchByPeriodModal.jsx","webpack://books/./src/components/invoices/SearchBySupplierModal.jsx","webpack://books/./src/pages/invoices.jsx"],"names":["input","onClick","children","variant","className","classnames","isOpen","onConfirm","onDismiss","onClose","modal","DeleteInvoiceModal","state","useSelector","invoices","modals","dispatch","useDispatch","props","invoice","handleConfirm","remove","result","unwrapResult","closeModal","alert","console","error","ConfirmationModal","description","SearchByPeriodModal","useState","period","setPeriod","setSearchParams","loadEntities","loadOptions","inputValue","callback","apiService","name","_embedded","periods","Autocomplete","getOptionLabel","getOptionValue","id","value","onChange","Button","type","SearchBySupplierModal","supplier","setSupplier","suppliers","useEffect","actions","label","Icon","icon","openModal","UpsertInvoiceModal","View","privateRoute","style","overflowY","SearchByButton","search","Table","schema","ids","entities","page","isLoading","Pagination","onLoadMore","loadMore"],"mappings":"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","file":"component---src-pages-invoices-jsx.e1438302366eb377b648.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classnames from \"classnames\";\n\nconst SearchByButton = ({ input, onClick, children }) => (\n  <Button\n    variant={input ? \"primary-light\" : \"light\"}\n    className={classnames([\"mr-2\", { \"no-print\": !input }])}\n    onClick={() => onClick()}\n  >\n    {children}\n  </Button>\n);\n\nexport default SearchByButton;\n","import React from \"react\";\nimport { Button, Modal as BSModal } from \"react-bootstrap\";\nimport Modal from \".\";\n\nconst ConfirmationModal = ({ isOpen, onConfirm, onDismiss, children }) => (\n  <Modal isOpen={isOpen} onClose={onDismiss}>\n    <BSModal.Body>{children}</BSModal.Body>\n    <BSModal.Footer>\n      <Button variant=\"light\" onClick={() => onDismiss()}>\n        Annulla\n      </Button>\n      <Button variant=\"primary\" onClick={() => onConfirm()}>\n        Conferma\n      </Button>\n    </BSModal.Footer>\n  </Modal>\n);\n\nexport default ConfirmationModal;\n","import { unwrapResult } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ConfirmationModal from '../common/modal/ConfirmationModal';\nimport { remove } from \"./actions\";\nimport { closeModal } from \"./slice\";\n\nconst modal = \"DeleteInvoiceModal\";\n\nconst DeleteInvoiceModal = () => {\n  const state = useSelector((state) => state.invoices.modals[modal]);\n  const dispatch = useDispatch();\n\n  const { isOpen, props: { invoice } = {} } = state || {};\n\n  // Update result and close the modal.\n  const handleConfirm = async () => {\n    try {\n      const result = await dispatch(remove(invoice));\n      unwrapResult(result);\n      dispatch(closeModal(modal));\n    } catch (error) {\n      alert(\"Errore durante l'eliminazione della fattura.\");\n      console.error(\"An error occurred while deleting the invoice.\", error);\n    }\n  };\n\n  return (\n    <ConfirmationModal\n      isOpen={isOpen}\n      onConfirm={handleConfirm}\n      onDismiss={() => dispatch(closeModal(modal))}\n    >\n      Sei sicuro di voler eliminare la fattura \"{invoice?.description}\"?\n    </ConfirmationModal>\n  );\n};\n\nDeleteInvoiceModal.modal = modal;\n\nexport default DeleteInvoiceModal;\n","import React, { useState } from \"react\";\nimport { Button, Modal as BSModal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadEntities } from './actions';\nimport { closeModal, setSearchParams } from \"./slice\";\nimport apiService from \"../../services/apiService\";\nimport Autocomplete from \"../common/Autocomplete\";\nimport Modal from \"../common/modal/index\";\n\nconst modal = \"SearchByPeriodModal\";\n\nconst SearchByPeriodModal = () => {\n  const state = useSelector((state) => state.invoices.modals[modal]);\n  const dispatch = useDispatch();\n  const [period, setPeriod] = useState();\n\n  const { isOpen } = state || {};\n\n  // Update result and close the modal.\n  const handleConfirm = async () => {\n    dispatch(setSearchParams({ period }));\n    dispatch(loadEntities());\n    dispatch(closeModal(modal));\n  };\n\n  //Options loader.\n  const loadOptions = async (inputValue, callback) => {\n    try {\n      const { _embedded } = await apiService.searchByMethod(\n        \"periods\",\n        \"findByNameContainingIgnoreCase\",\n        { name: inputValue }\n      );\n      callback(_embedded.periods);\n    } catch (error) {\n      alert(\"Errore: impossibile caricare opzioni.\");\n      console.error(\"Error while loading options.\", error);\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => dispatch(closeModal(modal))}>\n      <BSModal.Body>\n        <Autocomplete\n          getOptionLabel={(period) => period.name}\n          getOptionValue={(period) => period.id}\n          value={period}\n          loadOptions={loadOptions}\n          onChange={setPeriod}\n        />\n      </BSModal.Body>\n\n      <BSModal.Footer>\n        <Button variant=\"light\" onClick={() => dispatch(closeModal(modal))}>\n          Annulla\n        </Button>\n        <Button variant=\"primary\" type=\"submit\" onClick={handleConfirm}>\n          Confirma\n        </Button>\n      </BSModal.Footer>\n    </Modal>\n  );\n};\n\nSearchByPeriodModal.modal = modal;\n\nexport default SearchByPeriodModal;\n","import React, { useState } from \"react\";\nimport { Button, Modal as BSModal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadEntities } from \"./actions\";\nimport { closeModal, setSearchParams } from \"./slice\";\nimport apiService from \"../../services/apiService\";\nimport Autocomplete from \"../common/Autocomplete\";\nimport Modal from \"../common/modal/index\";\n\nconst modal = \"SearchBySupplierModal\";\n\nconst SearchBySupplierModal = () => {\n  const state = useSelector((state) => state.invoices.modals[modal]);\n  const dispatch = useDispatch();\n  const [supplier, setSupplier] = useState();\n\n  const { isOpen } = state || {};\n\n  // Update result and close the modal.\n  const handleConfirm = async () => {\n    dispatch(setSearchParams({ supplier }));\n    dispatch(loadEntities());\n    dispatch(closeModal(modal));\n  };\n\n  //Options loader.\n  const loadOptions = async (inputValue, callback) => {\n    try {\n      const { _embedded } = await apiService.searchByMethod(\n        \"suppliers\",\n        \"findByNameContainingIgnoreCase\",\n        { name: inputValue }\n      );\n      callback(_embedded.suppliers);\n    } catch (error) {\n      alert(\"Errore: impossibile caricare opzioni.\");\n      console.error(\"Error while loading options.\", error);\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => dispatch(closeModal(modal))}>\n      <BSModal.Body>\n        <Autocomplete\n          getOptionLabel={(supplier) => supplier.name}\n          getOptionValue={(supplier) => supplier.id}\n          value={supplier}\n          loadOptions={loadOptions}\n          onChange={setSupplier}\n        />\n      </BSModal.Body>\n\n      <BSModal.Footer>\n        <Button variant=\"light\" onClick={() => dispatch(closeModal(modal))}>\n          Annulla\n        </Button>\n        <Button variant=\"primary\" type=\"submit\" onClick={handleConfirm}>\n          Confirma\n        </Button>\n      </BSModal.Footer>\n    </Modal>\n  );\n};\n\nSearchBySupplierModal.modal = modal;\n\nexport default SearchBySupplierModal;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchByButton from \"../components/common/SearchByButton\";\nimport Icon from \"../components/common/Icon\";\nimport Pagination from \"../components/common/Pagination\";\nimport Table from \"../components/common/table/Table\";\nimport View from \"../components/common/View\";\nimport { loadEntities, loadMore } from \"../components/invoices/actions\";\nimport DeleteInvoiceModal from \"../components/invoices/DeleteInvoiceModal\";\nimport SearchByPeriodModal from \"../components/invoices/SearchByPeriodModal\";\nimport SearchBySupplierModal from \"../components/invoices/SearchBySupplierModal\";\nimport { openModal } from \"../components/invoices/slice\";\nimport UpsertInvoiceModal from \"../components/invoices/UpsertInvoiceModal\";\nimport schema from \"../settings/schemas/invoices\";\n\nconst Invoices = () => {\n  const state = useSelector((state) => state.invoices);\n  const dispatch = useDispatch();\n\n  /**\n   * Initial fetch\n   */\n  useEffect(() => void dispatch(loadEntities()), [dispatch]);\n\n  const handleUpdate = (invoice) =>\n    dispatch(\n      openModal({ modal: UpsertInvoiceModal.modal, props: { invoice } })\n    );\n\n  const handleRemove = (invoice) =>\n    dispatch(\n      openModal({ modal: DeleteInvoiceModal.modal, props: { invoice } })\n    );\n\n  // Table row actions\n  const actions = [\n    { label: <Icon icon=\"edit\" />, onClick: handleUpdate },\n    {\n      label: <Icon icon=\"trash-alt\" />,\n      onClick: handleRemove,\n    },\n  ];\n\n  /**\n   * UI\n   */\n  return (\n    <View privateRoute>\n      <div className=\"h-100 px-3\" style={{ overflowY: \"auto\" }}>\n        <div className=\"my-3\">\n          <SearchByButton\n            input={state.search?.period}\n            onClick={() =>\n              dispatch(openModal({ modal: SearchByPeriodModal.modal }))\n            }\n          >\n            {state.search?.period?.name || \"Seleiona periodo\"}\n          </SearchByButton>\n          <SearchByButton\n            input={state.search?.supplier}\n            onClick={() =>\n              dispatch(openModal({ modal: SearchBySupplierModal.modal }))\n            }\n          >\n            {state.search?.supplier?.name || \"Seleziona fornitore\"}\n          </SearchByButton>\n        </div>\n        <Table\n          schema={schema}\n          ids={state.ids}\n          entities={state.entities}\n          page={state.page}\n          isLoading={state.isLoading}\n          actions={actions}\n        />\n        <Pagination\n          page={state.page}\n          isLoading={state.isLoading}\n          onLoadMore={() => dispatch(loadMore())}\n        />\n        <DeleteInvoiceModal />\n        <SearchByPeriodModal />\n        <SearchBySupplierModal />\n      </div>\n    </View>\n  );\n};\n\nexport default Invoices;\n"],"sourceRoot":""}