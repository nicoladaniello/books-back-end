{"version":3,"sources":["webpack://books/./src/components/common/modal/ConfirmationModal.jsx","webpack://books/./src/components/periods/DeletePeriodModal.jsx","webpack://books/./src/pages/periods.jsx"],"names":["isOpen","onConfirm","onDismiss","children","onClose","variant","onClick","modal","DeletePeriodModal","state","useSelector","periods","modals","dispatch","useDispatch","props","period","handleConfirm","remove","result","unwrapResult","closeModal","alert","console","error","ConfirmationModal","name","useEffect","loadEntities","actions","label","Icon","icon","openModal","UpsertPeriodModal","View","privateRoute","className","style","overflowY","Table","schema","ids","entities","page","isLoading","Pagination","onLoadMore","loadMore"],"mappings":"+IAkBA,IAd0B,SAAC,GAAD,IAAGA,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,SAAjC,OACxB,gBAAC,IAAD,CAAOH,OAAQA,EAAQI,QAASF,GAC9B,gBAAC,SAAD,KAAeC,GACf,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQE,QAAQ,QAAQC,QAAS,kBAAMJ,MAAvC,WAGA,gBAAC,IAAD,CAAQG,QAAQ,UAAUC,QAAS,kBAAML,MAAzC,gB,oNCJAM,EAAQ,oBAERC,EAAoB,WACxB,IAAMC,GAAQC,SAAY,SAACD,GAAD,OAAWA,EAAME,QAAQC,OAAOL,MACpDM,GAAWC,UAFa,EAIaL,GAAS,GAA5CT,EAJsB,EAItBA,OAJsB,IAIde,MAASC,GAJK,aAIM,GAJN,GAILA,OAGnBC,EAAa,mCAAG,6GAEGJ,GAASK,QAAOF,IAFnB,OAEZG,EAFY,QAGlBC,QAAaD,GACbN,GAASQ,QAAWd,IAJF,gDAMlBe,MAAM,8CACNC,QAAQC,MAAM,+CAAd,MAPkB,yDAAH,qDAWnB,OACE,gBAACC,EAAA,EAAD,CACEzB,OAAQA,EACRC,UAAWgB,EACXf,UAAW,kBAAMW,GAASQ,QAAWd,MAHvC,6CAK6CS,aAL7C,EAK6CA,EAAQU,KALrD,OAUJlB,EAAkBD,MAAQA,EAE1B,Q,oBCqBA,EAjDgB,WACd,IAAME,GAAQC,SAAY,SAACD,GAAD,OAAWA,EAAME,WACrCE,GAAWC,WAKjBa,gBAAU,WAAWd,GAASe,aAAiB,CAACf,IAEhD,IAOMgB,EAAU,CACd,CAAEC,MAAO,gBAACC,EAAA,EAAD,CAAMC,KAAK,SAAW1B,QARZ,SAACU,GAAD,OACnBH,GAASoB,QAAU,CAAE1B,MAAO2B,UAAyBnB,MAAO,CAAEC,eAQ9D,CACEc,MAAO,gBAACC,EAAA,EAAD,CAAMC,KAAK,cAClB1B,QARiB,SAACU,GAAD,OACnBH,GAASoB,QAAU,CAAE1B,MAAOC,QAAyBO,MAAO,CAAEC,gBAchE,OACE,gBAACmB,EAAA,EAAD,CAAMC,cAAY,GAChB,uBAAKC,UAAU,aAAaC,MAAO,CAAEC,UAAW,SAC9C,gBAACC,EAAA,EAAD,CACEC,OAAQA,EACRC,IAAKjC,EAAMiC,IACXC,SAAUlC,EAAMkC,SAChBC,KAAMnC,EAAMmC,KACZC,UAAWpC,EAAMoC,UACjBhB,QAASA,IAEX,gBAACiB,EAAA,EAAD,CACEF,KAAMnC,EAAMmC,KACZC,UAAWpC,EAAMoC,UACjBE,WAAY,kBAAMlC,GAASmC,cAE7B,gBAAC,EAAD","file":"component---src-pages-periods-jsx.d0d43d58a4e82c7f0608.js","sourcesContent":["import React from \"react\";\nimport { Button, Modal as BSModal } from \"react-bootstrap\";\nimport Modal from \".\";\n\nconst ConfirmationModal = ({ isOpen, onConfirm, onDismiss, children }) => (\n  <Modal isOpen={isOpen} onClose={onDismiss}>\n    <BSModal.Body>{children}</BSModal.Body>\n    <BSModal.Footer>\n      <Button variant=\"light\" onClick={() => onDismiss()}>\n        Annulla\n      </Button>\n      <Button variant=\"primary\" onClick={() => onConfirm()}>\n        Conferma\n      </Button>\n    </BSModal.Footer>\n  </Modal>\n);\n\nexport default ConfirmationModal;\n","import { unwrapResult } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ConfirmationModal from \"../common/modal/ConfirmationModal\";\nimport { remove } from \"./actions\";\nimport { closeModal } from \"./slice\";\n\nconst modal = \"DeletePeriodModal\";\n\nconst DeletePeriodModal = () => {\n  const state = useSelector((state) => state.periods.modals[modal]);\n  const dispatch = useDispatch();\n\n  const { isOpen, props: { period } = {} } = state || {};\n\n  // Update result and close the modal.\n  const handleConfirm = async () => {\n    try {\n      const result = await dispatch(remove(period));\n      unwrapResult(result);\n      dispatch(closeModal(modal));\n    } catch (error) {\n      alert(\"Errore durante l'eliminazione del periodo.\");\n      console.error(\"An error occurred while deleting the period.\", error);\n    }\n  };\n\n  return (\n    <ConfirmationModal\n      isOpen={isOpen}\n      onConfirm={handleConfirm}\n      onDismiss={() => dispatch(closeModal(modal))}\n    >\n      Sei sicuro di voler eliminare il periodo \"{period?.name}\"?\n    </ConfirmationModal>\n  );\n};\n\nDeletePeriodModal.modal = modal;\n\nexport default DeletePeriodModal;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Icon from \"../components/common/Icon\";\nimport Pagination from \"../components/common/Pagination\";\nimport Table from \"../components/common/table/Table\";\nimport View from \"../components/common/View\";\nimport { loadEntities, loadMore } from \"../components/periods/actions\";\nimport DeletePeriodModal from \"../components/periods/DeletePeriodModal\";\nimport { openModal } from \"../components/periods/slice\";\nimport UpsertPeriodModal from \"../components/periods/UpsertPeriodModal\";\nimport schema from \"../settings/schemas/periods\";\n\nconst Periods = () => {\n  const state = useSelector((state) => state.periods);\n  const dispatch = useDispatch();\n\n  /**\n   * Initial fetch\n   */\n  useEffect(() => void dispatch(loadEntities()), [dispatch]);\n\n  const handleUpdate = (period) =>\n    dispatch(openModal({ modal: UpsertPeriodModal.modal, props: { period } }));\n\n  const handleRemove = (period) =>\n    dispatch(openModal({ modal: DeletePeriodModal.modal, props: { period } }));\n\n  // Table row actions\n  const actions = [\n    { label: <Icon icon=\"edit\" />, onClick: handleUpdate },\n    {\n      label: <Icon icon=\"trash-alt\" />,\n      onClick: handleRemove,\n    },\n  ];\n\n  /**\n   * UI\n   */\n  return (\n    <View privateRoute>\n      <div className=\"h-100 px-3\" style={{ overflowY: \"auto\" }}>\n        <Table\n          schema={schema}\n          ids={state.ids}\n          entities={state.entities}\n          page={state.page}\n          isLoading={state.isLoading}\n          actions={actions}\n        />\n        <Pagination\n          page={state.page}\n          isLoading={state.isLoading}\n          onLoadMore={() => dispatch(loadMore())}\n        />\n        <DeletePeriodModal />\n      </div>\n    </View>\n  );\n};\n\nexport default Periods;\n"],"sourceRoot":""}